#!/bin/sh
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

SORT=''
PAGE=1
SEARCH=''
DOMAIN='https://nyaa.si'
DELIM='\t'
RSORT='desc'
CATEGORY='0_0'
FILTER='0'

C_LE="31"
C_SE="32"
C_SIZE="33"
C_CATEGORY="34"
C_DOWNLOADED="35"
C_DATE="36"
C_NAME="39"
COLOR=1

alias ucurl='curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.15.2 Chrome/87.0.4280.144 Safari/537.36" -H "Accept-Encoding: gzip, deflate" --compressed'

while [ $# -gt 0 ]
do
  case "$1" in
    -s|--sort)
      case "$2" in
        name) SORT='';;
        comments) SORT='comments';;
        size) SORT='size';;
        time) SORT='id';;
        se) SORT='seeders';;
        le) SORT='leechers';;
        downloads) SORT='downloads';;
      esac
      shift;;
    -r|--reverse)
        RSORT='asc';;
    -h|--help)
        NAME="$(basename "$0")"
        printf '%s [OPTION]... [PATTERN]\nSearch for PATTERN in nyaa.\nExample: %s -s size -p 2 '"'"'list'"'"'\n\n' "$NAME" "$NAME"
        printf 'Options:\n  -s,  --sort TYPE\t\tsort using TYPE that can be: name, comments, size, time, se, le, downloads\n'
        printf '  -r,  --reverse\t\tsort in reverse\n'
        printf '  -d,  --domain DOMAIN\t\tset domain to DOMAIN\n'
        printf '  -D,  --delimiter DELIM\tset delimiter to DELIM\n'
        printf '  -p,  --page NUM\t\tshow page at NUM\n'
        printf '  -f,  --filter\t\t\tset filter to: no, no-remakes, no-trusted\n'
        printf '  -c,  --category\t\tsearch one of categories:\n'
        printf '\t  all\n'
        printf '\t  anime, anime-music-video, anime-english-translated,\n\t  anime-non-english-translated, anime-raw\n'
        printf '\t  audio, audio-lossless, audio-lossy\n'
        printf '\t  literature, literature-english-translated,\n\t  literature-non-english-translated, literature-raw\n'
        printf '\t  live-action, live-action-english-translated, live-action-idol-promotional-video,\n\t  live-action-non-english-translated, live-action-raw\n'
        printf '\t  pictures, pictures-graphics, pictures-photos\n'
        printf '\t  software, software-applications, software-games\n'
        printf '  -C,  --no-color\t\tdisable coloring of output\n'
        printf '  -h,  --help\t\t\tshow help\n'
        printf '\nMagnet link will be copied via xclip.\n'
        exit 0;;
    -C|--no-color)
        COLOR=0;;
    -p|--page)
        PAGE="$2"
        shift;;
    -d|--domain)
        DOMAIN="$2"
        shift;;
    -D|--delimiter)
        DELIM="$2"
        shift;;
    -f|--filter)
        case "$2" in
            no) FILTER='0';;
            no-remakes) FILTER='1';;
            trusted) FILTER='2';;
        esac
        shift;;
    -c|--category)
        case "$2" in
            all) CATEGORY='0_0';;
            anime) CATEGORY='1_0';;
            anime-music-video) CATEGORY='1_1';;
            anime-english-translated) CATEGORY='1_2';;
            anime-non-english-translated) CATEGORY='1_3';;
            anime-raw) CATEGORY='1_4';;
            audio) CATEGORY='2_0';;
            audio-lossless) CATEGORY='2_1';;
            audio-lossy) CATEGORY='2_2';;
            literature) CATEGORY='3_0';;
            literature-english-translated) CATEGORY='3_1';;
            literature-non-english-translated) CATEGORY='3_2';;
            literature-raw) CATEGORY='3_3';;
            live-action) CATEGORY='4_0';;
            live-action-english-translated) CATEGORY='4_1';;
            live-action-idol-promotional-video) CATEGORY='4_2';;
            live-action-non-english-translated) CATEGORY='4_3';;
            live-action-raw) CATEGORY='4_4';;
            pictures) CATEGORY='5_0';;
            pictures-graphics) CATEGORY='5_1';;
            pictures-photos) CATEGORY='5_2';;
            software) CATEGORY='6_0';;
            software-applications) CATEGORY='6_1';;
            software-games) CATEGORY='6_2';;
        esac
        shift;;
    *)
      SEARCH="$1";;
  esac
  shift
done

SEARCHP="$(echo "$SEARCH" | tr ' ' '+')"

t1="$(mktemp)"
t_category="$(mktemp)"
t_se="$(mktemp)"
t_le="$(mktemp)"
t_name="$(mktemp)"
t_magnets="$(mktemp)"
t_size="$(mktemp)"
t_date="$(mktemp)"
t_downloaded="$(mktemp)"
trap 'rm "$t1" "$t_size" "$t_date" "$t_downloaded" "$t_se" "$t_le" "$t_name" "$t_category" "$t_magnets"' EXIT

ucurl -s "$DOMAIN/?f=$FILTER&c=$CATEGORY&q=$SEARCHP&s=$SORT&o=$RSORT&p=$PAGE" | hgrep 'table +class="table table-bordered table-hover table-striped torrent-list"' > "$t1"
hgrep 'td +colspan="2"; a +href="/view/[0-9]*" @p"%i\n"' "$t1" > "$t_name"
hgrep 'a +href="/?c=[0-9]_[0-9]"; img +class="category-icon" +alt @p"%(alt)a\n"' "$t1" > "$t_category"
hgrep 'td +class; a +href="magnet:?.*" @p"%(href)a\n"' "$t1" > "$t_magnets"
hgrep 'td +class @m"iB$" @p"%i\n"' "$t1" > "$t_size"
hgrep 'td +class +data-timestamp @p"%i\n"' "$t1" > "$t_date"
t2="$(hgrep 'td +class @m"^[0-9]\+$" @p"%i\n"' "$t1" | sed 'N;N; s/\n/,/g')"
echo "$t2" | cut -d ',' -f1 > "$t_se"
echo "$t2" | cut -d ',' -f2 > "$t_le"
echo "$t2" | cut -d ',' -f3 > "$t_downloaded"

color_lines() {
    sed "s/^/\x1b[$1m/; s/$/\x1b[0m/" "$2" > "$3"
    cp "$3" "$2"
}

if [ "$COLOR" -eq 1 ]
then
    color_lines "$C_SIZE" "$t_size" "$t1"
    color_lines "$C_NAME" "$t_name" "$t1"
    color_lines "$C_LE" "$t_le" "$t1"
    color_lines "$C_SE" "$t_se" "$t1"
    color_lines "$C_DOWNLOADED" "$t_downloaded" "$t1"
    color_lines "$C_DATE" "$t_date" "$t1"
    color_lines "$C_CATEGORY" "$t_category" "$t1"
fi

paste -d "$DELIM" "$t_category" "$t_name" "$t_size" "$t_date" "$t_se" "$t_le" "$t_downloaded" | nl
printf 'num> '
read -r NUMBER
[ "$NUMBER" -gt 0 ] && sed "${NUMBER}q;d" "$t_magnets" | tee /dev/stderr | tr -d '\n' | xclip -sel clip
